#!/usr/bin/env node

'use strict'
/**
 * Module dependencies.
 */

const app = require('../app');
const debug = require('debug')('connectfour:server');
const http = require('http');
const socket = require('../socket');

let utils = {
  normalizePort: function(val) {
    let port = parseInt(val, 10);

    if (isNaN(port)) {
      // named pipe
      return val;
    }

    if (port >= 0) {
      // port number
      return port;
    }

    return false;
  },
  onError: function(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }

    let bind = typeof port === 'string' ?
      'Pipe ' + port :
      'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
      default:
        throw error;
    }
  },
  onListening: function() {
    let addr = server.address();
    let bind = typeof addr === 'string' ?
      'pipe ' + addr :
      'port ' + addr.port;
    debug('Listening on ' + bind);
  }
}

/**
 * Define Process title
 */
process.title = "Connect4";

/**
 * Get port from environment and store in Express.
 */
let port = 8080;
app.set('port', port);

/**
 * Create HTTP server.
 */

let server = http.createServer(app);

//SOCKET.IO
socket.connectGame(server);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', utils.onError);
server.on('listening', utils.onListening);